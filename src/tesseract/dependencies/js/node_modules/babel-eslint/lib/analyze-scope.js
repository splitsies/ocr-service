const t=require("@babel/types"),requireFromESLint=require("./require-from-eslint"),escope=requireFromESLint("eslint-scope"),Definition=requireFromESLint("eslint-scope/lib/definition").Definition,OriginalPatternVisitor=requireFromESLint("eslint-scope/lib/pattern-visitor"),OriginalReferencer=requireFromESLint("eslint-scope/lib/referencer"),fallback=require("eslint-visitor-keys").getKeys,childVisitorKeys=require("./visitor-keys"),flowFlippedAliasKeys=t.FLIPPED_ALIAS_KEYS.Flow.concat(["ArrayPattern","ClassDeclaration","ClassExpression","FunctionDeclaration","FunctionExpression","Identifier","ObjectPattern","RestElement"]),visitorKeysMap=Object.keys(t.VISITOR_KEYS).reduce((function(acc,key){const value=t.VISITOR_KEYS[key];return-1===flowFlippedAliasKeys.indexOf(value)&&(acc[key]=value),acc}),{}),propertyTypes={callProperties:{type:"loop",values:["value"]},indexers:{type:"loop",values:["key","value"]},properties:{type:"loop",values:["argument","value"]},types:{type:"loop"},params:{type:"loop"},argument:{type:"single"},elementType:{type:"single"},qualification:{type:"single"},rest:{type:"single"},returnType:{type:"single"},typeAnnotation:{type:"typeAnnotation"},typeParameters:{type:"typeParameters"},id:{type:"id"}};class PatternVisitor extends OriginalPatternVisitor{ArrayPattern(node){node.elements.forEach(this.visit,this)}ObjectPattern(node){node.properties.forEach(this.visit,this)}}class Referencer extends OriginalReferencer{visitPattern(node,options,callback){if(!node)return;this._checkIdentifierOrVisit(node.typeAnnotation),t.isAssignmentPattern(node)&&this._checkIdentifierOrVisit(node.left.typeAnnotation),"function"==typeof options&&(callback=options,options={processRightHandNodes:!1});const visitor=new PatternVisitor(this.options,node,callback);visitor.visit(node),options.processRightHandNodes&&visitor.rightHandNodes.forEach(this.visit,this)}visitClass(node){this._visitArray(node.decorators);const typeParamScope=this._nestTypeParamScope(node);this._visitTypeAnnotation(node.implements),this._visitTypeAnnotation(node.superTypeParameters&&node.superTypeParameters.params),super.visitClass(node),typeParamScope&&this.close(node)}visitFunction(node){const typeParamScope=this._nestTypeParamScope(node);this._checkIdentifierOrVisit(node.returnType),super.visitFunction(node),typeParamScope&&this.close(node)}visitProperty(node){node.value&&"TypeCastExpression"===node.value.type&&this._visitTypeAnnotation(node.value),this._visitArray(node.decorators),super.visitProperty(node)}InterfaceDeclaration(node){this._createScopeVariable(node,node.id);const typeParamScope=this._nestTypeParamScope(node);this._visitArray(node.extends),this.visit(node.body),typeParamScope&&this.close(node)}EnumDeclaration(node){this._createScopeVariable(node,node.id)}TypeAlias(node){this._createScopeVariable(node,node.id);const typeParamScope=this._nestTypeParamScope(node);this.visit(node.right),typeParamScope&&this.close(node)}ClassProperty(node){this._visitClassProperty(node)}ClassPrivateProperty(node){this._visitClassProperty(node)}DeclareModule(node){this._visitDeclareX(node)}DeclareFunction(node){this._visitDeclareX(node)}DeclareVariable(node){this._visitDeclareX(node)}DeclareClass(node){this._visitDeclareX(node)}OptionalMemberExpression(node){super.MemberExpression(node)}_visitClassProperty(node){this._visitTypeAnnotation(node.typeAnnotation),this.visitProperty(node)}_visitDeclareX(node){node.id&&this._createScopeVariable(node,node.id);this._nestTypeParamScope(node)&&this.close(node)}_createScopeVariable(node,name){this.currentScope().variableScope.__define(name,new Definition("Variable",name,node,null,null,null))}_nestTypeParamScope(node){if(!node.typeParameters)return null;const parentScope=this.scopeManager.__currentScope,scope=new escope.Scope(this.scopeManager,"type-parameters",parentScope,node,!1);this.scopeManager.__nestScope(scope);for(let j=0;j<node.typeParameters.params.length;j++){const name=node.typeParameters.params[j];scope.__define(name,new Definition("TypeParameter",name,name)),name.typeAnnotation&&this._checkIdentifierOrVisit(name)}return scope.__define=function(){return parentScope.__define.apply(parentScope,arguments)},scope}_visitTypeAnnotation(node){if(!node)return;if(Array.isArray(node))return void node.forEach(this._visitTypeAnnotation,this);const visitorValues=visitorKeysMap[node.type];if(visitorValues)for(let i=0;i<visitorValues.length;i++){const visitorValue=visitorValues[i],propertyType=propertyTypes[visitorValue],nodeProperty=node[visitorValue];if(null!=propertyType&&null!=nodeProperty)if("loop"===propertyType.type)for(let j=0;j<nodeProperty.length;j++)if(Array.isArray(propertyType.values))for(let k=0;k<propertyType.values.length;k++){const loopPropertyNode=nodeProperty[j][propertyType.values[k]];loopPropertyNode&&this._checkIdentifierOrVisit(loopPropertyNode)}else this._checkIdentifierOrVisit(nodeProperty[j]);else if("single"===propertyType.type)this._checkIdentifierOrVisit(nodeProperty);else if("typeAnnotation"===propertyType.type)this._visitTypeAnnotation(node.typeAnnotation);else if("typeParameters"===propertyType.type)for(let l=0;l<node.typeParameters.params.length;l++)this._checkIdentifierOrVisit(node.typeParameters.params[l]);else"id"===propertyType.type&&("Identifier"===node.id.type?this._checkIdentifierOrVisit(node.id):this._visitTypeAnnotation(node.id))}}_checkIdentifierOrVisit(node){node&&node.typeAnnotation?this._visitTypeAnnotation(node.typeAnnotation):node&&"Identifier"===node.type?this.visit(node):this._visitTypeAnnotation(node)}_visitArray(nodeList){if(nodeList)for(const node of nodeList)this.visit(node)}}module.exports=function(ast,parserOptions){const options={ignoreEval:!0,optimistic:!1,directive:!1,nodejsScope:"script"===ast.sourceType&&!0===(parserOptions.ecmaFeatures&&parserOptions.ecmaFeatures.globalReturn),impliedStrict:!1,sourceType:ast.sourceType,ecmaVersion:parserOptions.ecmaVersion||2018,fallback:fallback};options.childVisitorKeys=childVisitorKeys;const scopeManager=new escope.ScopeManager(options);return new Referencer(options,scopeManager).visit(ast),scopeManager};