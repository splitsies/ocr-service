function BmpDecoder(buffer,is_with_alpha){if(this.pos=0,this.buffer=buffer,this.is_with_alpha=!!is_with_alpha,this.bottom_up=!0,this.flag=this.buffer.toString("utf-8",0,this.pos+=2),"BM"!=this.flag)throw new Error("Invalid BMP File");this.parseHeader(),this.parseRGBA()}BmpDecoder.prototype.parseHeader=function(){if(this.fileSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.reserved=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.offset=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.headerSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.width=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.height=this.buffer.readInt32LE(this.pos),this.pos+=4,this.planes=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.bitPP=this.buffer.readUInt16LE(this.pos),this.pos+=2,this.compress=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.rawSize=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.hr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.vr=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.colors=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.importantColors=this.buffer.readUInt32LE(this.pos),this.pos+=4,16===this.bitPP&&this.is_with_alpha&&(this.bitPP=15),this.bitPP<15){var len=0===this.colors?1<<this.bitPP:this.colors;this.palette=new Array(len);for(var i=0;i<len;i++){var blue=this.buffer.readUInt8(this.pos++),green=this.buffer.readUInt8(this.pos++),red=this.buffer.readUInt8(this.pos++),quad=this.buffer.readUInt8(this.pos++);this.palette[i]={red:red,green:green,blue:blue,quad:quad}}}this.height<0&&(this.height*=-1,this.bottom_up=!1)},BmpDecoder.prototype.parseRGBA=function(){var bitn="bit"+this.bitPP,len=this.width*this.height*4;this.data=new Buffer(len),this[bitn]()},BmpDecoder.prototype.bit1=function(){var xlen=Math.ceil(this.width/8),mode=xlen%4,y=this.height>=0?this.height-1:-this.height;for(y=this.height-1;y>=0;y--){for(var line=this.bottom_up?y:this.height-1-y,x=0;x<xlen;x++)for(var b=this.buffer.readUInt8(this.pos++),location=line*this.width*4+8*x*4,i=0;i<8&&8*x+i<this.width;i++){var rgb=this.palette[b>>7-i&1];this.data[location+4*i]=0,this.data[location+4*i+1]=rgb.blue,this.data[location+4*i+2]=rgb.green,this.data[location+4*i+3]=rgb.red}0!=mode&&(this.pos+=4-mode)}},BmpDecoder.prototype.bit4=function(){if(2==this.compress){this.data.fill(255);for(var location=0,lines=this.bottom_up?this.height-1:0,low_nibble=!1;location<this.data.length;){var a=this.buffer.readUInt8(this.pos++),b=this.buffer.readUInt8(this.pos++);if(0==a){if(0==b){this.bottom_up?lines--:lines++,location=lines*this.width*4,low_nibble=!1;continue}if(1==b)break;if(2==b){var x=this.buffer.readUInt8(this.pos++),y=this.buffer.readUInt8(this.pos++);this.bottom_up?lines-=y:lines+=y,location+=y*this.width*4+4*x}else{for(var c=this.buffer.readUInt8(this.pos++),i=0;i<b;i++)low_nibble?setPixelData.call(this,15&c):setPixelData.call(this,(240&c)>>4),1&i&&i+1<b&&(c=this.buffer.readUInt8(this.pos++)),low_nibble=!low_nibble;1==(b+1>>1&1)&&this.pos++}}else for(i=0;i<a;i++)low_nibble?setPixelData.call(this,15&b):setPixelData.call(this,(240&b)>>4),low_nibble=!low_nibble}function setPixelData(rgbIndex){var rgb=this.palette[rgbIndex];this.data[location]=0,this.data[location+1]=rgb.blue,this.data[location+2]=rgb.green,this.data[location+3]=rgb.red,location+=4}}else{var xlen=Math.ceil(this.width/2),mode=xlen%4;for(y=this.height-1;y>=0;y--){var line=this.bottom_up?y:this.height-1-y;for(x=0;x<xlen;x++){b=this.buffer.readUInt8(this.pos++),location=line*this.width*4+2*x*4;var before=b>>4,after=15&b,rgb=this.palette[before];if(this.data[location]=0,this.data[location+1]=rgb.blue,this.data[location+2]=rgb.green,this.data[location+3]=rgb.red,2*x+1>=this.width)break;rgb=this.palette[after],this.data[location+4]=0,this.data[location+4+1]=rgb.blue,this.data[location+4+2]=rgb.green,this.data[location+4+3]=rgb.red}0!=mode&&(this.pos+=4-mode)}}},BmpDecoder.prototype.bit8=function(){if(1==this.compress){this.data.fill(255);for(var location=0,lines=this.bottom_up?this.height-1:0;location<this.data.length;){var a=this.buffer.readUInt8(this.pos++),b=this.buffer.readUInt8(this.pos++);if(0==a){if(0==b){this.bottom_up?lines--:lines++,location=lines*this.width*4;continue}if(1==b)break;if(2==b){var x=this.buffer.readUInt8(this.pos++),y=this.buffer.readUInt8(this.pos++);this.bottom_up?lines-=y:lines+=y,location+=y*this.width*4+4*x}else{for(var i=0;i<b;i++){var c=this.buffer.readUInt8(this.pos++);setPixelData.call(this,c)}!0&b&&this.pos++}}else for(i=0;i<a;i++)setPixelData.call(this,b)}function setPixelData(rgbIndex){var rgb=this.palette[rgbIndex];this.data[location]=0,this.data[location+1]=rgb.blue,this.data[location+2]=rgb.green,this.data[location+3]=rgb.red,location+=4}}else{var mode=this.width%4;for(y=this.height-1;y>=0;y--){var line=this.bottom_up?y:this.height-1-y;for(x=0;x<this.width;x++){b=this.buffer.readUInt8(this.pos++),location=line*this.width*4+4*x;if(b<this.palette.length){var rgb=this.palette[b];this.data[location]=0,this.data[location+1]=rgb.blue,this.data[location+2]=rgb.green,this.data[location+3]=rgb.red}else this.data[location]=0,this.data[location+1]=255,this.data[location+2]=255,this.data[location+3]=255}0!=mode&&(this.pos+=4-mode)}}},BmpDecoder.prototype.bit15=function(){for(var dif_w=this.width%3,_1_5=parseInt("11111",2),y=this.height-1;y>=0;y--){for(var line=this.bottom_up?y:this.height-1-y,x=0;x<this.width;x++){var B=this.buffer.readUInt16LE(this.pos);this.pos+=2;var blue=(B&_1_5)/_1_5*255|0,green=(B>>5&_1_5)/_1_5*255|0,red=(B>>10&_1_5)/_1_5*255|0,alpha=B>>15?255:0,location=line*this.width*4+4*x;this.data[location]=alpha,this.data[location+1]=blue,this.data[location+2]=green,this.data[location+3]=red}this.pos+=dif_w}},BmpDecoder.prototype.bit16=function(){var dif_w=this.width%2*2;this.maskRed=31744,this.maskGreen=992,this.maskBlue=31,this.mask0=0,3==this.compress&&(this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4);for(var ns=[0,0,0],i=0;i<16;i++)this.maskRed>>i&1&&ns[0]++,this.maskGreen>>i&1&&ns[1]++,this.maskBlue>>i&1&&ns[2]++;ns[1]+=ns[0],ns[2]+=ns[1],ns[0]=8-ns[0],ns[1]-=8,ns[2]-=8;for(var y=this.height-1;y>=0;y--){for(var line=this.bottom_up?y:this.height-1-y,x=0;x<this.width;x++){var B=this.buffer.readUInt16LE(this.pos);this.pos+=2;var blue=(B&this.maskBlue)<<ns[0],green=(B&this.maskGreen)>>ns[1],red=(B&this.maskRed)>>ns[2],location=line*this.width*4+4*x;this.data[location]=0,this.data[location+1]=blue,this.data[location+2]=green,this.data[location+3]=red}this.pos+=dif_w}},BmpDecoder.prototype.bit24=function(){for(var y=this.height-1;y>=0;y--){for(var line=this.bottom_up?y:this.height-1-y,x=0;x<this.width;x++){var blue=this.buffer.readUInt8(this.pos++),green=this.buffer.readUInt8(this.pos++),red=this.buffer.readUInt8(this.pos++),location=line*this.width*4+4*x;this.data[location]=0,this.data[location+1]=blue,this.data[location+2]=green,this.data[location+3]=red}this.pos+=this.width%4}},BmpDecoder.prototype.bit32=function(){if(3==this.compress){this.maskRed=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskGreen=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.maskBlue=this.buffer.readUInt32LE(this.pos),this.pos+=4,this.mask0=this.buffer.readUInt32LE(this.pos),this.pos+=4;for(var y=this.height-1;y>=0;y--)for(var line=this.bottom_up?y:this.height-1-y,x=0;x<this.width;x++){var alpha=this.buffer.readUInt8(this.pos++),blue=this.buffer.readUInt8(this.pos++),green=this.buffer.readUInt8(this.pos++),red=this.buffer.readUInt8(this.pos++),location=line*this.width*4+4*x;this.data[location]=alpha,this.data[location+1]=blue,this.data[location+2]=green,this.data[location+3]=red}}else for(y=this.height-1;y>=0;y--)for(line=this.bottom_up?y:this.height-1-y,x=0;x<this.width;x++){blue=this.buffer.readUInt8(this.pos++),green=this.buffer.readUInt8(this.pos++),red=this.buffer.readUInt8(this.pos++),alpha=this.buffer.readUInt8(this.pos++),location=line*this.width*4+4*x;this.data[location]=alpha,this.data[location+1]=blue,this.data[location+2]=green,this.data[location+3]=red}},BmpDecoder.prototype.getData=function(){return this.data},module.exports=function(bmpData){return new BmpDecoder(bmpData)};