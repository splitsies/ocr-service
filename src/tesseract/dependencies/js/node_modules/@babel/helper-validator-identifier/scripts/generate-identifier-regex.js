const version="15.0.0",start=require("@unicode/unicode-"+version+"/Binary_Property/ID_Start/code-points.js").filter((function(ch){return ch>127}));let last=-1;const cont=[8204,8205].concat(require("@unicode/unicode-"+version+"/Binary_Property/ID_Continue/code-points.js").filter((function(ch){return ch>127&&-1==search(start,ch,last+1)})));function search(arr,ch,starting){for(let i=starting;arr[i]<=ch&&i<arr.length;last=i++)if(arr[i]===ch)return i;return-1}function pad(str,width){for(;str.length<width;)str="0"+str;return str}function esc(code){const hex=code.toString(16);return hex.length<=2?"\\x"+pad(hex,2):"\\u"+pad(hex,4)}function generate(chars){const astral=[];let re="";for(let i=0,at=65536;i<chars.length;i++){const from=chars[i];let to=from;for(;i<chars.length-1&&chars[i+1]==to+1;)i++,to++;to<=65535?re+=from==to?esc(from):from+1==to?esc(from)+esc(to):esc(from)+"-"+esc(to):(astral.push(from-at,to-from),at=to)}return{nonASCII:re,astral:astral}}const startData=generate(start),contData=generate(cont);console.log("/* prettier-ignore */"),console.log('let nonASCIIidentifierStartChars = "'+startData.nonASCII+'";'),console.log("/* prettier-ignore */"),console.log('let nonASCIIidentifierChars = "'+contData.nonASCII+'";'),console.log("/* prettier-ignore */"),console.log("const astralIdentifierStartCodes = "+JSON.stringify(startData.astral)+";"),console.log("/* prettier-ignore */"),console.log("const astralIdentifierCodes = "+JSON.stringify(contData.astral)+";");