Object.defineProperty(exports,"__esModule",{value:!0}),exports._getKey=_getKey,exports._getPattern=_getPattern,exports.get=get,exports.getAllNextSiblings=getAllNextSiblings,exports.getAllPrevSiblings=getAllPrevSiblings,exports.getBindingIdentifierPaths=getBindingIdentifierPaths,exports.getBindingIdentifiers=getBindingIdentifiers,exports.getCompletionRecords=getCompletionRecords,exports.getNextSibling=getNextSibling,exports.getOpposite=getOpposite,exports.getOuterBindingIdentifierPaths=getOuterBindingIdentifierPaths,exports.getOuterBindingIdentifiers=getOuterBindingIdentifiers,exports.getPrevSibling=getPrevSibling,exports.getSibling=getSibling;var _index=require("./index"),_t=require("@babel/types");const{getBindingIdentifiers:_getBindingIdentifiers,getOuterBindingIdentifiers:_getOuterBindingIdentifiers,isDeclaration:isDeclaration,numericLiteral:numericLiteral,unaryExpression:unaryExpression}=_t,NORMAL_COMPLETION=0,BREAK_COMPLETION=1;function NormalCompletion(path){return{type:NORMAL_COMPLETION,path:path}}function BreakCompletion(path){return{type:BREAK_COMPLETION,path:path}}function getOpposite(){return"left"===this.key?this.getSibling("right"):"right"===this.key?this.getSibling("left"):null}function addCompletionRecords(path,records,context){return path&&records.push(..._getCompletionRecords(path,context)),records}function completionRecordForSwitch(cases,records,context){let lastNormalCompletions=[];for(let i=0;i<cases.length;i++){const caseCompletions=_getCompletionRecords(cases[i],context),normalCompletions=[],breakCompletions=[];for(const c of caseCompletions)c.type===NORMAL_COMPLETION&&normalCompletions.push(c),c.type===BREAK_COMPLETION&&breakCompletions.push(c);normalCompletions.length&&(lastNormalCompletions=normalCompletions),records.push(...breakCompletions)}return records.push(...lastNormalCompletions),records}function normalCompletionToBreak(completions){completions.forEach((c=>{c.type=BREAK_COMPLETION}))}function replaceBreakStatementInBreakCompletion(completions,reachable){completions.forEach((c=>{c.path.isBreakStatement({label:null})&&(reachable?c.path.replaceWith(unaryExpression("void",numericLiteral(0))):c.path.remove())}))}function getStatementListCompletion(paths,context){const completions=[];if(context.canHaveBreak){let lastNormalCompletions=[];for(let i=0;i<paths.length;i++){const path=paths[i],newContext=Object.assign({},context,{inCaseClause:!1});path.isBlockStatement()&&(context.inCaseClause||context.shouldPopulateBreak)?newContext.shouldPopulateBreak=!0:newContext.shouldPopulateBreak=!1;const statementCompletions=_getCompletionRecords(path,newContext);if(statementCompletions.length>0&&statementCompletions.every((c=>c.type===BREAK_COMPLETION))){lastNormalCompletions.length>0&&statementCompletions.every((c=>c.path.isBreakStatement({label:null})))?(normalCompletionToBreak(lastNormalCompletions),completions.push(...lastNormalCompletions),lastNormalCompletions.some((c=>c.path.isDeclaration()))&&(completions.push(...statementCompletions),replaceBreakStatementInBreakCompletion(statementCompletions,!0)),replaceBreakStatementInBreakCompletion(statementCompletions,!1)):(completions.push(...statementCompletions),context.shouldPopulateBreak||replaceBreakStatementInBreakCompletion(statementCompletions,!0));break}if(i===paths.length-1)completions.push(...statementCompletions);else{lastNormalCompletions=[];for(let i=0;i<statementCompletions.length;i++){const c=statementCompletions[i];c.type===BREAK_COMPLETION&&completions.push(c),c.type===NORMAL_COMPLETION&&lastNormalCompletions.push(c)}}}}else if(paths.length)for(let i=paths.length-1;i>=0;i--){const pathCompletions=_getCompletionRecords(paths[i],context);if(pathCompletions.length>1||1===pathCompletions.length&&!pathCompletions[0].path.isVariableDeclaration()){completions.push(...pathCompletions);break}}return completions}function _getCompletionRecords(path,context){let records=[];if(path.isIfStatement())records=addCompletionRecords(path.get("consequent"),records,context),records=addCompletionRecords(path.get("alternate"),records,context);else{if(path.isDoExpression()||path.isFor()||path.isWhile()||path.isLabeledStatement())return addCompletionRecords(path.get("body"),records,context);if(path.isProgram()||path.isBlockStatement())return getStatementListCompletion(path.get("body"),context);if(path.isFunction())return _getCompletionRecords(path.get("body"),context);if(path.isTryStatement())records=addCompletionRecords(path.get("block"),records,context),records=addCompletionRecords(path.get("handler"),records,context);else{if(path.isCatchClause())return addCompletionRecords(path.get("body"),records,context);if(path.isSwitchStatement())return completionRecordForSwitch(path.get("cases"),records,context);if(path.isSwitchCase())return getStatementListCompletion(path.get("consequent"),{canHaveBreak:!0,shouldPopulateBreak:!1,inCaseClause:!0});path.isBreakStatement()?records.push(BreakCompletion(path)):records.push(NormalCompletion(path))}}return records}function getCompletionRecords(){return _getCompletionRecords(this,{canHaveBreak:!1,shouldPopulateBreak:!1,inCaseClause:!1}).map((r=>r.path))}function getSibling(key){return _index.default.get({parentPath:this.parentPath,parent:this.parent,container:this.container,listKey:this.listKey,key:key}).setContext(this.context)}function getPrevSibling(){return this.getSibling(this.key-1)}function getNextSibling(){return this.getSibling(this.key+1)}function getAllNextSiblings(){let _key=this.key,sibling=this.getSibling(++_key);const siblings=[];for(;sibling.node;)siblings.push(sibling),sibling=this.getSibling(++_key);return siblings}function getAllPrevSiblings(){let _key=this.key,sibling=this.getSibling(--_key);const siblings=[];for(;sibling.node;)siblings.push(sibling),sibling=this.getSibling(--_key);return siblings}function get(key,context=!0){!0===context&&(context=this.context);const parts=key.split(".");return 1===parts.length?this._getKey(key,context):this._getPattern(parts,context)}function _getKey(key,context){const node=this.node,container=node[key];return Array.isArray(container)?container.map(((_,i)=>_index.default.get({listKey:key,parentPath:this,parent:node,container:container,key:i}).setContext(context))):_index.default.get({parentPath:this,parent:node,container:node,key:key}).setContext(context)}function _getPattern(parts,context){let path=this;for(const part of parts)path="."===part?path.parentPath:Array.isArray(path)?path[part]:path.get(part,context);return path}function getBindingIdentifiers(duplicates){return _getBindingIdentifiers(this.node,duplicates)}function getOuterBindingIdentifiers(duplicates){return _getOuterBindingIdentifiers(this.node,duplicates)}function getBindingIdentifierPaths(duplicates=!1,outerOnly=!1){const search=[this],ids=Object.create(null);for(;search.length;){const id=search.shift();if(!id)continue;if(!id.node)continue;const keys=_getBindingIdentifiers.keys[id.node.type];if(id.isIdentifier())if(duplicates){(ids[id.node.name]=ids[id.node.name]||[]).push(id)}else ids[id.node.name]=id;else if(id.isExportDeclaration()){const declaration=id.get("declaration");isDeclaration(declaration)&&search.push(declaration)}else{if(outerOnly){if(id.isFunctionDeclaration()){search.push(id.get("id"));continue}if(id.isFunctionExpression())continue}if(keys)for(let i=0;i<keys.length;i++){const key=keys[i],child=id.get(key);Array.isArray(child)?search.push(...child):child.node&&search.push(child)}}}return ids}function getOuterBindingIdentifierPaths(duplicates=!1){return this.getBindingIdentifierPaths(duplicates,!0)}