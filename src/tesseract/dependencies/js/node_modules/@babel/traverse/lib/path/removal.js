Object.defineProperty(exports,"__esModule",{value:!0}),exports._assertUnremoved=_assertUnremoved,exports._callRemovalHooks=_callRemovalHooks,exports._markRemoved=_markRemoved,exports._remove=_remove,exports._removeFromScope=_removeFromScope,exports.remove=remove;var _removalHooks=require("./lib/removal-hooks"),_cache=require("../cache"),_index=require("./index");function remove(){var _this$opts;this._assertUnremoved(),this.resync(),null!=(_this$opts=this.opts)&&_this$opts.noScope||this._removeFromScope(),this._callRemovalHooks()||(this.shareCommentsWithSiblings(),this._remove()),this._markRemoved()}function _removeFromScope(){const bindings=this.getBindingIdentifiers();Object.keys(bindings).forEach((name=>this.scope.removeBinding(name)))}function _callRemovalHooks(){for(const fn of _removalHooks.hooks)if(fn(this,this.parentPath))return!0}function _remove(){Array.isArray(this.container)?(this.container.splice(this.key,1),this.updateSiblingKeys(this.key,-1)):this._replaceWith(null)}function _markRemoved(){this._traverseFlags|=_index.SHOULD_SKIP|_index.REMOVED,this.parent&&_cache.path.get(this.parent).delete(this.node),this.node=null}function _assertUnremoved(){if(this.removed)throw this.buildCodeFrameError("NodePath has been removed so is read-only.")}