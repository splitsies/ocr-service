Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Hub",{enumerable:!0,get:function(){return _hub.default}}),Object.defineProperty(exports,"NodePath",{enumerable:!0,get:function(){return _path.default}}),Object.defineProperty(exports,"Scope",{enumerable:!0,get:function(){return _scope.default}}),exports.visitors=exports.default=void 0;var visitors=require("./visitors");exports.visitors=visitors;var _t=require("@babel/types"),cache=require("./cache"),_traverseNode=require("./traverse-node"),_path=require("./path"),_scope=require("./scope"),_hub=require("./hub");const{VISITOR_KEYS:VISITOR_KEYS,removeProperties:removeProperties,traverseFast:traverseFast}=_t;function traverse(parent,opts={},scope,state,parentPath){if(parent){if(!opts.noScope&&!scope&&"Program"!==parent.type&&"File"!==parent.type)throw new Error(`You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ${parent.type} node without passing scope and parentPath.`);VISITOR_KEYS[parent.type]&&(visitors.explode(opts),(0,_traverseNode.traverseNode)(parent,opts,scope,state,parentPath))}}var _default=traverse;function hasDenylistedType(path,state){path.node.type===state.type&&(state.has=!0,path.stop())}exports.default=_default,traverse.visitors=visitors,traverse.verify=visitors.verify,traverse.explode=visitors.explode,traverse.cheap=function(node,enter){traverseFast(node,enter)},traverse.node=function(node,opts,scope,state,path,skipKeys){(0,_traverseNode.traverseNode)(node,opts,scope,state,path,skipKeys)},traverse.clearNode=function(node,opts){removeProperties(node,opts),cache.path.delete(node)},traverse.removeProperties=function(tree,opts){return traverseFast(tree,traverse.clearNode,opts),tree},traverse.hasType=function(tree,type,denylistTypes){if(null!=denylistTypes&&denylistTypes.includes(tree.type))return!1;if(tree.type===type)return!0;const state={has:!1,type:type};return traverse(tree,{noScope:!0,denylist:denylistTypes,enter:hasDenylistedType},null,state),state.has},traverse.cache=cache;