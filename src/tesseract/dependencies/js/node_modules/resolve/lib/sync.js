var isCore=require("is-core-module"),fs=require("fs"),path=require("path"),getHomedir=require("./homedir"),caller=require("./caller"),nodeModulesPaths=require("./node-modules-paths"),normalizeOptions=require("./normalize-options"),realpathFS="win32"!==process.platform&&fs.realpathSync&&"function"==typeof fs.realpathSync.native?fs.realpathSync.native:fs.realpathSync,homedir=getHomedir(),defaultPaths=function(){return[path.join(homedir,".node_modules"),path.join(homedir,".node_libraries")]},defaultIsFile=function(file){try{var stat=fs.statSync(file,{throwIfNoEntry:!1})}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return!!stat&&(stat.isFile()||stat.isFIFO())},defaultIsDir=function(dir){try{var stat=fs.statSync(dir,{throwIfNoEntry:!1})}catch(e){if(e&&("ENOENT"===e.code||"ENOTDIR"===e.code))return!1;throw e}return!!stat&&stat.isDirectory()},defaultRealpathSync=function(x){try{return realpathFS(x)}catch(realpathErr){if("ENOENT"!==realpathErr.code)throw realpathErr}return x},maybeRealpathSync=function(realpathSync,x,opts){return opts&&!1===opts.preserveSymlinks?realpathSync(x):x},defaultReadPackageSync=function(readFileSync,pkgfile){var body=readFileSync(pkgfile);try{return JSON.parse(body)}catch(jsonErr){}},getPackageCandidates=function(x,start,opts){for(var dirs=nodeModulesPaths(start,opts,x),i=0;i<dirs.length;i++)dirs[i]=path.join(dirs[i],x);return dirs};module.exports=function(x,options){if("string"!=typeof x)throw new TypeError("Path must be a string.");var opts=normalizeOptions(x,options),isFile=opts.isFile||defaultIsFile,readFileSync=opts.readFileSync||fs.readFileSync,isDirectory=opts.isDirectory||defaultIsDir,realpathSync=opts.realpathSync||defaultRealpathSync,readPackageSync=opts.readPackageSync||defaultReadPackageSync;if(opts.readFileSync&&opts.readPackageSync)throw new TypeError("`readFileSync` and `readPackageSync` are mutually exclusive.");var packageIterator=opts.packageIterator,extensions=opts.extensions||[".js"],includeCoreModules=!1!==opts.includeCoreModules,basedir=opts.basedir||path.dirname(caller()),parent=opts.filename||basedir;opts.paths=opts.paths||defaultPaths();var absoluteStart=maybeRealpathSync(realpathSync,path.resolve(basedir),opts);if(/^(?:\.\.?(?:\/|$)|\/|([A-Za-z]:)?[/\\])/.test(x)){var res=path.resolve(absoluteStart,x);"."!==x&&".."!==x&&"/"!==x.slice(-1)||(res+="/");var m=loadAsFileSync(res)||loadAsDirectorySync(res);if(m)return maybeRealpathSync(realpathSync,m,opts)}else{if(includeCoreModules&&isCore(x))return x;var n=loadNodeModulesSync(x,absoluteStart);if(n)return maybeRealpathSync(realpathSync,n,opts)}var err=new Error("Cannot find module '"+x+"' from '"+parent+"'");throw err.code="MODULE_NOT_FOUND",err;function loadAsFileSync(x){var pkg=loadpkg(path.dirname(x));if(pkg&&pkg.dir&&pkg.pkg&&opts.pathFilter){var rfile=path.relative(pkg.dir,x),r=opts.pathFilter(pkg.pkg,x,rfile);r&&(x=path.resolve(pkg.dir,r))}if(isFile(x))return x;for(var i=0;i<extensions.length;i++){var file=x+extensions[i];if(isFile(file))return file}}function loadpkg(dir){if(""!==dir&&"/"!==dir&&!("win32"===process.platform&&/^\w:[/\\]*$/.test(dir)||/[/\\]node_modules[/\\]*$/.test(dir))){var pkgfile=path.join(maybeRealpathSync(realpathSync,dir,opts),"package.json");if(!isFile(pkgfile))return loadpkg(path.dirname(dir));var pkg=readPackageSync(readFileSync,pkgfile);return pkg&&opts.packageFilter&&(pkg=opts.packageFilter(pkg,dir)),{pkg:pkg,dir:dir}}}function loadAsDirectorySync(x){var pkgfile=path.join(maybeRealpathSync(realpathSync,x,opts),"/package.json");if(isFile(pkgfile)){try{var pkg=readPackageSync(readFileSync,pkgfile)}catch(e){}if(pkg&&opts.packageFilter&&(pkg=opts.packageFilter(pkg,x)),pkg&&pkg.main){if("string"!=typeof pkg.main){var mainError=new TypeError("package “"+pkg.name+"” `main` must be a string");throw mainError.code="INVALID_PACKAGE_MAIN",mainError}"."!==pkg.main&&"./"!==pkg.main||(pkg.main="index");try{var m=loadAsFileSync(path.resolve(x,pkg.main));if(m)return m;var n=loadAsDirectorySync(path.resolve(x,pkg.main));if(n)return n}catch(e){}}}return loadAsFileSync(path.join(x,"/index"))}function loadNodeModulesSync(x,start){for(var thunk=function(){return getPackageCandidates(x,start,opts)},dirs=packageIterator?packageIterator(x,start,thunk,opts):thunk(),i=0;i<dirs.length;i++){var dir=dirs[i];if(isDirectory(path.dirname(dir))){var m=loadAsFileSync(dir);if(m)return m;var n=loadAsDirectorySync(dir);if(n)return n}}}};